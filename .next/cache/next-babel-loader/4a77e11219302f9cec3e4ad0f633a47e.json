{"ast":null,"code":"var _jsxFileName = \"/media/shohedul/New Volume/shop/components/Button/Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport ButtonStyle from './Button.style';\nimport { FormattedMessage } from 'react-intl';\n\nconst Button = _ref => {\n  let {\n    type,\n    size,\n    title,\n    intlButtonId,\n    colors,\n    variant,\n    icon,\n    disabled,\n    iconPosition,\n    iconStyle,\n    onClick,\n    loader,\n    loaderColor,\n    isLoading,\n    className,\n    fullwidth,\n    style\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"size\", \"title\", \"intlButtonId\", \"colors\", \"variant\", \"icon\", \"disabled\", \"iconPosition\", \"iconStyle\", \"onClick\", \"loader\", \"loaderColor\", \"isLoading\", \"className\", \"fullwidth\", \"style\"]);\n\n  // Checking button loading state\n  const buttonIcon = isLoading !== false ? __jsx(React.Fragment, null, loader ? loader : 'loading....') : icon && __jsx(\"span\", {\n    className: \"btn-icon\",\n    style: iconStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, icon); // set icon position\n\n  const position = iconPosition || 'right';\n  return __jsx(ButtonStyle, _extends({\n    type: type,\n    className: `reusecore__button ${disabled ? 'disabled' : ''} ${isLoading ? 'isLoading' : ''} ${className ? className : ''}`.trim(),\n    icon: icon,\n    disabled: disabled,\n    \"icon-position\": position,\n    onClick: onClick,\n    colors: colors,\n    variant: variant,\n    fullwidth: fullwidth,\n    style: style,\n    size: size\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), position === 'left' && buttonIcon, title && !isLoading && __jsx(\"span\", {\n    className: \"btn-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: intlButtonId ? intlButtonId : 'intlButtonId',\n    defaultMessage: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), position === 'right' && buttonIcon);\n};\n\nButton.defaultProps = {\n  disabled: false,\n  isLoading: false,\n  type: 'button'\n};\nexport default Button;","map":{"version":3,"names":["React","ButtonStyle","FormattedMessage","Button","type","size","title","intlButtonId","colors","variant","icon","disabled","iconPosition","iconStyle","onClick","loader","loaderColor","isLoading","className","fullwidth","style","props","buttonIcon","position","trim","defaultProps"],"sources":["/media/shohedul/New Volume/shop/components/Button/Button.tsx"],"sourcesContent":["import React from 'react';\nimport ButtonStyle from './Button.style';\nimport { FormattedMessage } from 'react-intl';\n\ntype ButtonProps = {\n  title: any;\n  intlButtonId?: any;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: (e: any) => void;\n  loader?: Object;\n  loaderColor?: string;\n  isLoading?: boolean;\n  className?: string;\n  fullwidth?: boolean;\n  style?: any;\n  type?: 'button' | 'submit' | 'reset';\n  iconPosition?: 'left' | 'right';\n  iconStyle?: any;\n  size?: 'small' | 'medium';\n  colors?: 'primary' | 'secondary';\n  variant?:\n    | 'textButton'\n    | 'outlined'\n    | 'outlinedDash'\n    | 'outlinedFab'\n    | 'extendedOutlinedFab'\n    | 'fab'\n    | 'extendedFab';\n};\n\nconst Button: React.FC<ButtonProps> = ({\n  type,\n  size,\n  title,\n  intlButtonId,\n  colors,\n  variant,\n  icon,\n  disabled,\n  iconPosition,\n  iconStyle,\n  onClick,\n  loader,\n  loaderColor,\n  isLoading,\n  className,\n  fullwidth,\n  style,\n  ...props\n}) => {\n  // Checking button loading state\n  const buttonIcon =\n    isLoading !== false ? (\n      <>{loader ? loader : 'loading....'}</>\n    ) : (\n      icon && (\n        <span className='btn-icon' style={iconStyle}>\n          {icon}\n        </span>\n      )\n    );\n\n  // set icon position\n  const position: string = iconPosition || 'right';\n\n  return (\n    <ButtonStyle\n      type={type}\n      className={`reusecore__button ${disabled ? 'disabled' : ''} ${\n        isLoading ? 'isLoading' : ''\n      } ${className ? className : ''}`.trim()}\n      icon={icon}\n      disabled={disabled}\n      icon-position={position}\n      onClick={onClick}\n      colors={colors}\n      variant={variant}\n      fullwidth={fullwidth}\n      style={style}\n      size={size}\n      {...props}\n    >\n      {position === 'left' && buttonIcon}\n      {title && !isLoading && (\n        <span className='btn-text'>\n          <FormattedMessage\n            id={intlButtonId ? intlButtonId : 'intlButtonId'}\n            defaultMessage={title}\n          />\n        </span>\n      )}\n      {position === 'right' && buttonIcon}\n    </ButtonStyle>\n  );\n};\n\nButton.defaultProps = {\n  disabled: false,\n  isLoading: false,\n  type: 'button',\n};\n\nexport default Button;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AA6BA,MAAMC,MAA6B,GAAG,QAmBhC;EAAA,IAnBiC;IACrCC,IADqC;IAErCC,IAFqC;IAGrCC,KAHqC;IAIrCC,YAJqC;IAKrCC,MALqC;IAMrCC,OANqC;IAOrCC,IAPqC;IAQrCC,QARqC;IASrCC,YATqC;IAUrCC,SAVqC;IAWrCC,OAXqC;IAYrCC,MAZqC;IAarCC,WAbqC;IAcrCC,SAdqC;IAerCC,SAfqC;IAgBrCC,SAhBqC;IAiBrCC;EAjBqC,CAmBjC;EAAA,IADDC,KACC;;EACJ;EACA,MAAMC,UAAU,GACdL,SAAS,KAAK,KAAd,GACE,4BAAGF,MAAM,GAAGA,MAAH,GAAY,aAArB,CADF,GAGEL,IAAI,IACF;IAAM,SAAS,EAAC,UAAhB;IAA2B,KAAK,EAAEG,SAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGH,IADH,CALN,CAFI,CAaJ;;EACA,MAAMa,QAAgB,GAAGX,YAAY,IAAI,OAAzC;EAEA,OACE,MAAC,WAAD;IACE,IAAI,EAAER,IADR;IAEE,SAAS,EAAG,qBAAoBO,QAAQ,GAAG,UAAH,GAAgB,EAAG,IACzDM,SAAS,GAAG,WAAH,GAAiB,EAC3B,IAAGC,SAAS,GAAGA,SAAH,GAAe,EAAG,EAFpB,CAEsBM,IAFtB,EAFb;IAKE,IAAI,EAAEd,IALR;IAME,QAAQ,EAAEC,QANZ;IAOE,iBAAeY,QAPjB;IAQE,OAAO,EAAET,OARX;IASE,MAAM,EAAEN,MATV;IAUE,OAAO,EAAEC,OAVX;IAWE,SAAS,EAAEU,SAXb;IAYE,KAAK,EAAEC,KAZT;IAaE,IAAI,EAAEf;EAbR,GAcMgB,KAdN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAgBGE,QAAQ,KAAK,MAAb,IAAuBD,UAhB1B,EAiBGhB,KAAK,IAAI,CAACW,SAAV,IACC;IAAM,SAAS,EAAC,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,gBAAD;IACE,EAAE,EAAEV,YAAY,GAAGA,YAAH,GAAkB,cADpC;IAEE,cAAc,EAAED,KAFlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAlBJ,EAyBGiB,QAAQ,KAAK,OAAb,IAAwBD,UAzB3B,CADF;AA6BD,CAhED;;AAkEAnB,MAAM,CAACsB,YAAP,GAAsB;EACpBd,QAAQ,EAAE,KADU;EAEpBM,SAAS,EAAE,KAFS;EAGpBb,IAAI,EAAE;AAHc,CAAtB;AAMA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}