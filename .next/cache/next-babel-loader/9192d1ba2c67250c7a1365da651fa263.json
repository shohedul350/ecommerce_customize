{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/shohedul/New Volume/shop/contexts/create-context.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, createContext } from 'react';\nexport function useCreateContext(defaultValue, reducer) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$();\n\n  var defaultDispatch = function defaultDispatch() {\n    return defaultValue;\n  };\n\n  var stateCtx = /*#__PURE__*/createContext(defaultValue);\n  var dispatchCtx = /*#__PURE__*/createContext(defaultDispatch);\n\n  function useStateCtx(property) {\n    _s();\n\n    var state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  _s(useStateCtx, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\n  function useDispatchCtx() {\n    _s2();\n\n    return useContext(dispatchCtx);\n  }\n\n  _s2(useDispatchCtx, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n  function Provider(_ref) {\n    _s3();\n\n    var children = _ref.children;\n\n    var _React$useReducer = React.useReducer(reducer, defaultValue),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        state = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n    return __jsx(dispatchCtx.Provider, {\n      value: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(stateCtx.Provider, {\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n  _s3(Provider, \"pdrM+HUu9kahqD/IYg8JQRTUgC0=\");\n\n  return [useStateCtx, useDispatchCtx, Provider];\n} // const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }","map":{"version":3,"names":["React","useContext","createContext","useCreateContext","defaultValue","reducer","defaultDispatch","stateCtx","dispatchCtx","useStateCtx","property","state","useDispatchCtx","Provider","children","useReducer","dispatch"],"sources":["/media/shohedul/New Volume/shop/contexts/create-context.tsx"],"sourcesContent":["import React, { Reducer, Dispatch, useContext, createContext } from 'react';\n\nexport function useCreateContext<S, A>(\n  defaultValue: S,\n  reducer: Reducer<S, A>\n) {\n  const defaultDispatch: Dispatch<A> = () => defaultValue;\n  const stateCtx = createContext(defaultValue);\n  const dispatchCtx = createContext(defaultDispatch);\n\n  function useStateCtx<K extends keyof S>(property: K) {\n    const state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  function useDispatchCtx() {\n    return useContext(dispatchCtx);\n  }\n\n  function Provider({ children }: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer(reducer, defaultValue);\n    return (\n      <dispatchCtx.Provider value={dispatch}>\n        <stateCtx.Provider value={state}>{children}</stateCtx.Provider>\n      </dispatchCtx.Provider>\n    );\n  }\n  return [useStateCtx, useDispatchCtx, Provider] as const;\n}\n\n// const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,UAAnC,EAA+CC,aAA/C,QAAoE,OAApE;AAEA,OAAO,SAASC,gBAAT,CACLC,YADK,EAELC,OAFK,EAGL;EAAA;EAAA;EAAA;;EACA,IAAMC,eAA4B,GAAG,SAA/BA,eAA+B;IAAA,OAAMF,YAAN;EAAA,CAArC;;EACA,IAAMG,QAAQ,gBAAGL,aAAa,CAACE,YAAD,CAA9B;EACA,IAAMI,WAAW,gBAAGN,aAAa,CAACI,eAAD,CAAjC;;EAEA,SAASG,WAAT,CAAwCC,QAAxC,EAAqD;IAAA;;IACnD,IAAMC,KAAK,GAAGV,UAAU,CAACM,QAAD,CAAxB;IACA,OAAOI,KAAK,CAACD,QAAD,CAAZ,CAFmD,CAE3B;EACzB;;EARD,GAKSD,WALT;;EAUA,SAASG,cAAT,GAA0B;IAAA;;IACxB,OAAOX,UAAU,CAACO,WAAD,CAAjB;EACD;;EAZD,IAUSI,cAVT;;EAcA,SAASC,QAAT,OAA6D;IAAA;;IAAA,IAAzCC,QAAyC,QAAzCA,QAAyC;;IAC3D,wBAA0Bd,KAAK,CAACe,UAAN,CAAiBV,OAAjB,EAA0BD,YAA1B,CAA1B;IAAA;IAAA,IAAOO,KAAP;IAAA,IAAcK,QAAd;;IACA,OACE,MAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAEA,QAA7B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,QAAD,CAAU,QAAV;MAAmB,KAAK,EAAEL,KAA1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAkCG,QAAlC,CADF,CADF;EAKD;;EArBD,IAcSD,QAdT;;EAsBA,OAAO,CAACJ,WAAD,EAAcG,cAAd,EAA8BC,QAA9B,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}