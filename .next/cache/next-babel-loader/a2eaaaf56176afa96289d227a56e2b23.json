{"ast":null,"code":"var _jsxFileName = \"/media/shohedul/New Volume/shop/components/TreeMenu/TreeMenu.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { usePrevious, useMeasure } from 'helper/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './TreeMenu.style';\nimport * as Icons from 'components/AllSvgIcon';\nconst Tree = /*#__PURE__*/React.memo(({\n  children,\n  name,\n  icon,\n  isOpen,\n  onClick,\n  depth,\n  defaultOpen = false\n}) => {\n  const previous = usePrevious(isOpen);\n  const [bind, {\n    height: viewHeight\n  }] = useMeasure();\n  const {\n    height,\n    opacity,\n    transform\n  } = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`\n    }\n  });\n  const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  return __jsx(Frame, {\n    depth: depth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    open: isOpen,\n    depth: depth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, Icon !== null && __jsx(IconWrapper, {\n    depth: depth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  })), __jsx(Title, {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, name)), __jsx(Content, {\n    style: {\n      opacity,\n      height: isOpen && previous === isOpen ? 'auto' : height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(animated.div, _extends({\n    style: {\n      transform\n    }\n  }, bind, {\n    children: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n});\nexport const TreeMenu = ({\n  data,\n  className,\n  onClick,\n  active\n}) => {\n  const handler = children => {\n    return children.map(subOption => {\n      if (!subOption.children) {\n        return __jsx(Tree, {\n          key: subOption.title,\n          name: subOption.title,\n          icon: subOption.icon,\n          depth: \"child\",\n          onClick: () => onClick(subOption.slug),\n          isOpen: active === subOption.slug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        });\n      }\n\n      return __jsx(Tree, {\n        key: subOption.title,\n        name: subOption.title,\n        icon: subOption.icon,\n        depth: \"parent\",\n        onClick: () => onClick(subOption.slug),\n        isOpen: active === subOption.slug || subOption.children.some(children => children.slug === active),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, handler(subOption.children));\n    });\n  };\n\n  return __jsx(React.Fragment, null, handler(data));\n};","map":{"version":3,"names":["React","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","IconWrapper","Icons","Tree","memo","children","name","icon","isOpen","onClick","depth","defaultOpen","previous","bind","height","viewHeight","opacity","transform","from","to","Icon","TreeMenu","data","className","active","handler","map","subOption","title","slug","some"],"sources":["/media/shohedul/New Volume/shop/components/TreeMenu/TreeMenu.tsx"],"sourcesContent":["import React from 'react';\nimport { usePrevious, useMeasure } from 'helper/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './TreeMenu.style';\nimport * as Icons from 'components/AllSvgIcon';\nconst Tree = React.memo(\n  ({\n    children,\n    name,\n    icon,\n    isOpen,\n    onClick,\n    depth,\n    defaultOpen = false,\n  }: any) => {\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n      },\n    });\n    const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n    return (\n      <Frame depth={depth}>\n        <Header open={isOpen} depth={depth}>\n          {Icon !== null && (\n            <IconWrapper depth={depth}>\n              <Icon />\n            </IconWrapper>\n          )}\n          <Title onClick={onClick}>{name}</Title>\n        </Header>\n        <Content\n          style={{\n            opacity,\n            height: isOpen && previous === isOpen ? 'auto' : height,\n          }}\n        >\n          <animated.div style={{ transform }} {...bind} children={children} />\n        </Content>\n      </Frame>\n    );\n  }\n);\n\ntype Props = {\n  className?: any;\n  data: any;\n  onClick: (slug: string) => void;\n  active: string | string[];\n};\nexport const TreeMenu: React.FC<Props> = ({\n  data,\n  className,\n  onClick,\n  active,\n}) => {\n  const handler = (children) => {\n    return children.map((subOption) => {\n      if (!subOption.children) {\n        return (\n          <Tree\n            key={subOption.title}\n            name={subOption.title}\n            icon={subOption.icon}\n            depth='child'\n            onClick={() => onClick(subOption.slug)}\n            isOpen={active === subOption.slug}\n          />\n        );\n      }\n      return (\n        <Tree\n          key={subOption.title}\n          name={subOption.title}\n          icon={subOption.icon}\n          depth='parent'\n          onClick={() => onClick(subOption.slug)}\n          isOpen={\n            active === subOption.slug ||\n            subOption.children.some((children) => children.slug === active)\n          }\n        >\n          {handler(subOption.children)}\n        </Tree>\n      );\n    });\n  };\n  return <>{handler(data)}</>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}