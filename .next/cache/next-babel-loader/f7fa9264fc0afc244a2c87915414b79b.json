{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport function usePrevious(value) {\n  _s();\n\n  var ref = useRef();\n  useEffect(function () {\n    return void (ref.current = value);\n  }, [value]);\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport function useMeasure() {\n  _s2();\n\n  var ref = useRef();\n\n  var _useState = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  }),\n      bounds = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(function () {\n    return new ResizeObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      return set(entry.contentRect);\n    });\n  }),\n      ro = _useState2[0];\n\n  useEffect(function () {\n    if (ref.current) ro.observe(ref.current);\n    return function () {\n      return ro.disconnect();\n    };\n  }, []);\n  return [{\n    ref: ref\n  }, bounds];\n}\n\n_s2(useMeasure, \"6zLxZVjexM5JyDsbfEFUtV0xCyc=\");","map":{"version":3,"names":["useState","useRef","useEffect","ResizeObserver","usePrevious","value","ref","current","useMeasure","left","top","width","height","bounds","set","entry","contentRect","ro","observe","disconnect"],"sources":["/media/shohedul/New Volume/shop/helper/hooks.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => void (ref.current = value), [value]);\n  return ref.current;\n}\n\nexport function useMeasure() {\n  const ref = useRef();\n  const [bounds, set] = useState<any>({ left: 0, top: 0, width: 0, height: 0 });\n  const [ro] = useState(\n    () => new ResizeObserver(([entry]) => set(entry.contentRect))\n  );\n  useEffect(() => {\n    if (ref.current) ro.observe(ref.current);\n    return () => ro.disconnect();\n  }, []);\n  return [{ ref }, bounds];\n}\n"],"mappings":";;;;;AAAA,SAAgBA,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EACjC,IAAMC,GAAG,GAAGL,MAAM,EAAlB;EACAC,SAAS,CAAC;IAAA,OAAM,MAAMI,GAAG,CAACC,OAAJ,GAAcF,KAApB,CAAN;EAAA,CAAD,EAAmC,CAACA,KAAD,CAAnC,CAAT;EACA,OAAOC,GAAG,CAACC,OAAX;AACD;;GAJeH,W;;AAMhB,OAAO,SAASI,UAAT,GAAsB;EAAA;;EAC3B,IAAMF,GAAG,GAAGL,MAAM,EAAlB;;EACA,gBAAsBD,QAAQ,CAAM;IAAES,IAAI,EAAE,CAAR;IAAWC,GAAG,EAAE,CAAhB;IAAmBC,KAAK,EAAE,CAA1B;IAA6BC,MAAM,EAAE;EAArC,CAAN,CAA9B;EAAA,IAAOC,MAAP;EAAA,IAAeC,GAAf;;EACA,iBAAad,QAAQ,CACnB;IAAA,OAAM,IAAIG,cAAJ,CAAmB;MAAA;MAAA,IAAEY,KAAF;;MAAA,OAAaD,GAAG,CAACC,KAAK,CAACC,WAAP,CAAhB;IAAA,CAAnB,CAAN;EAAA,CADmB,CAArB;EAAA,IAAOC,EAAP;;EAGAf,SAAS,CAAC,YAAM;IACd,IAAII,GAAG,CAACC,OAAR,EAAiBU,EAAE,CAACC,OAAH,CAAWZ,GAAG,CAACC,OAAf;IACjB,OAAO;MAAA,OAAMU,EAAE,CAACE,UAAH,EAAN;IAAA,CAAP;EACD,CAHQ,EAGN,EAHM,CAAT;EAIA,OAAO,CAAC;IAAEb,GAAG,EAAHA;EAAF,CAAD,EAAUO,MAAV,CAAP;AACD;;IAXeL,U"},"metadata":{},"sourceType":"module"}